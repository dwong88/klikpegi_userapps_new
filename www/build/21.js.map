{"version":3,"sources":["../../src/pages/input-biodata/input-biodata.ts","../../src/pages/input-biodata/input-biodata.module.ts"],"names":[],"mappings":"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","file":"21.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n@IonicPage()\n@Component({\n    selector: 'page-input-biodata',\n    templateUrl: 'input-biodata.html'\n})\nexport class InputBiodataPage {\n\n\n\n    /**\n     * @name form\n     * @type {FormGroup}\n     * @public\n     * @description     Define FormGroup property for managing form validation / data retrieval\n     */\n    public form                   : FormGroup;\n    public biodataNamaDepan       : any;\n    public biodataNamaBelakang    : any;\n    public biodataJenisKelamin    : any;\n    public biodataAlamat          : any;\n    public biodataNoTelp          : any;\n    public biodataEmail           : any;\n\n    public isEdited               : boolean = false;\n    public hideForm               : boolean = false;\n    public pageTitle              : string;\n    //public recordID               : any      = null;\n    public idBiodata               : any      = null;\n\n    //private baseURI               : string  = \"http://localhost/ionic_php_bio/\";\n\n    private baseURI               : string  = \"http://localhost/klikmgnew/public_html/index.php?r=mg/tghproperty/\";\n\n\n\n\n    // Initialise module classes\n    constructor(public navCtrl    : NavController,\n                public http       : Http,\n                public NP         : NavParams,\n                public fb         : FormBuilder,\n                public toastCtrl  : ToastController)\n    {\n\n        // Create form builder validation rules\n        this.form = fb.group({\n            \"namaDepan\"                  : [\"\", Validators.required],\n            \"namaBelakang\"                  : [\"\", Validators.required],\n            \"jenisKelamin\"                  : [\"\", Validators.required],\n            \"alamat\"                  : [\"\", Validators.required],\n            \"noTelp\"                  : [\"\", Validators.required],\n            \"email\"           : [\"\", Validators.required]\n        });\n    }\n\n    /**\n     * Triggered when template view is about to be entered\n     * Determine whether we adding or editing a record\n     * based on any supplied navigation parameters\n     *\n     * @public\n     * @method ionViewWillEnter\n     * @return {None}\n     */\n    ionViewWillEnter() : void\n    {\n        this.resetFields();\n\n        if(this.NP.get(\"record\"))\n        {\n            this.isEdited      = true;\n            this.selectEntry(this.NP.get(\"record\"));\n            this.pageTitle     = 'Kembali';\n        }\n        else\n        {\n            this.isEdited      = false;\n            this.pageTitle     = 'Create entry';\n        }\n    }\n\n\n\n\n    /**\n     * Assign the navigation retrieved data to properties\n     * used as models on the page's HTML form\n     *\n     * @public\n     * @method selectEntry\n     * @param item \t\t{any} \t\t\tNavigation data\n     * @return {None}\n     */\n    selectEntry(item : any) : void\n    {\n        this.biodataNamaDepan        = item.namaDepan;\n        this.biodataNamaBelakang     = item.namaBelakang;\n        this.biodataJenisKelamin     = item.jenisKelamin;\n        this.biodataAlamat           = item.alamat;\n        this.biodataEmail            = item.email;\n        this.biodataNoTelp           = item.noTelp;\n        this.idBiodata               = item.idBiodata;\n    }\n\n\n\n\n    /**\n     * Save a new record that has been added to the page's HTML form\n     * Use angular's http post method to submit the record data\n     *\n     * @public\n     * @method createEntry\n     * @param name \t\t\t{String} \t\t\tName value from form field\n     * @param description \t{String} \t\t\tDescription value from form field\n     * @return {None}\n     */\n    createEntry(namaDepan, namaBelakang, jenisKelamin, alamat, noTelp, email )\n    {\n        let body        : string    = \"key=insert&namaDepan=\" + namaDepan + \"&namaBelakang=\" + namaBelakang + \"&jenisKelamin=\" + jenisKelamin + \"&alamat=\" + alamat + \"&noTelp=\" + noTelp + \"&email=\" + email,\n            type        : string    = \"application/x-www-form-urlencoded; charset=UTF-8\",\n            headers \t: any\t\t= new Headers({'Content-Type' : type}),\n            options \t: any\t\t= new RequestOptions({ headers}),\n            url       : any      \t= this.baseURI + \"manage-data.php\";\n\n        this.http\n            .post(url, body, options)\n            .subscribe(data =>\n                {\n                    // If the request was successful notify the user\n                    if(data.status === 200){\n                        this.hideForm  =  true;\n                        this.sendNotification(`Congratulations : ${namaDepan} was successfully Insert`);\n                    }\n                    else{\n                        this.sendNotification('Something went wrong!');\n                    }\n                },\n                (error : any) =>\n                {\n                    this.sendNotification('Something went wrong!');\n                });\n    }\n\n    InsertData(namaDepan, namaBelakang)\n    {\n        let body        : string    = \"&namaDepan=\" + namaDepan + \"&namaBelakang=\" + namaBelakang,\n            type        : string    = \"application/x-www-form-urlencoded; charset=UTF-8\",\n            headers \t: any\t\t= new Headers({'Content-Type' : type}),\n            options \t: any\t\t= new RequestOptions({ headers}),\n            url       : any      \t= this.baseURI + \"create\";\n\n        this.http\n            .post(url, body, options)\n            .subscribe(data =>\n                {\n                    // If the request was successful notify the user\n                    if(data.status === 200){\n                        this.hideForm  =  true;\n                        this.sendNotification(`Congratulations : ${namaDepan} was successfully Insert`);\n                    }\n                    else{\n                        this.sendNotification('Something went wrong!');\n                    }\n                },\n                (error : any) =>\n                {\n                    this.sendNotification('Something went wrong!');\n                });\n    }\n\n\n\n\n    /**\n     * Update an existing record that has been edited in the page's HTML form\n     * Use angular's http post method to submit the record data\n     * to our remote PHP script\n     *\n     * @public\n     * @method updateEntry\n     * @param name \t\t\t{String} \t\t\tName value from form field\n     * @param description \t{String} \t\t\tDescription value from form field\n     * @return {None}\n     */\n    updateEntry(namaDepan, namaBelakang, jenisKelamin, alamat, noTelp, email )\n    {\n        let body        : string    = \"key=update&namaDepan=\" + namaDepan + \"&namaBelakang=\" + namaBelakang + \"&jenisKelamin=\" + jenisKelamin + \"&alamat=\" + alamat + \"&noTelp=\" + noTelp + \"&email=\" + email +\"&idBiodata=\" + this.idBiodata,\n            type        : string    = \"application/x-www-form-urlencoded; charset=UTF-8\",\n            headers \t: any\t\t= new Headers({'Content-Type' : type}),\n            options \t: any\t\t= new RequestOptions({ headers}),\n            url       : any      \t= this.baseURI + \"manage-data.php\";\n\n        this.http\n            .post(url, body, options)\n            .subscribe(data =>\n                {\n                    // If the request was successful notify the user\n\n                    if(data.status === 200){\n                        this.hideForm  =  true;\n                        this.sendNotification(`Congratulations : ${namaDepan} was successfully updated`);\n                    }\n                    else{\n                        this.sendNotification('Something went wrong!');\n                    }\n\n                },\n                (error : any) =>\n                {\n                    this.sendNotification('Something went wrong!');\n                });\n    }\n\n\n\n\n    /**\n     * Remove an existing record that has been selected in the page's HTML form\n     * Use angular's http post method to submit the record data\n     * to our remote PHP script\n     *\n     * @public\n     * @method deleteEntry\n     * @return {None}\n     */\n    deleteEntry() : void\n    {\n        let\n\n              body \t: string\t\t= \"key=delete&idBiodata=\" + this.idBiodata ,\n              name      : string \t= this.form.controls[\"namaDepan\"].value,\n              type        : string    = \"application/x-www-form-urlencoded; charset=UTF-8\",\n              headers \t: any\t\t= new Headers({'Content-Type' : type}),\n              options \t: any\t\t= new RequestOptions({ headers}),\n              url       : any      \t= this.baseURI + \"manage-data.php\";\n\n        this.http\n            .post(url, body, options)\n            .subscribe(data =>\n                {\n\n                    if(data.status === 200){\n                        this.hideForm     = true;\n                        this.sendNotification(`Congratulations the technology: ${name} was successfully deleted`);}\n                    else{\n                        this.sendNotification('Something went wrong!');\n                    }\n                },\n                (error : any) =>\n                {\n                    this.sendNotification('Something went wrong!');\n                });\n    }\n\n\n\n    hapusdata() : void\n    {\n        let\n\n            body \t: string\t\t= \"key=delete&idBiodata=\" + this.idBiodata ,\n            name      : string \t= this.form.controls[\"namaDepan\"].value,\n            type        : string    = \"application/x-www-form-urlencoded; charset=UTF-8\",\n            headers \t: any\t\t= new Headers({'Content-Type' : type}),\n            options \t: any\t\t= new RequestOptions({ headers}),\n            url       : any      \t= this.baseURI + \"manage-data.php\";\n\n        this.http\n            .post(url, body, options)\n            .subscribe(data =>\n                {\n\n                    if(data.status === 200){\n                        this.hideForm     = true;\n                        this.sendNotification(`Congratulations the technology: ${name} was successfully deleted`);}\n                    else{\n                        this.sendNotification('Something went wrong!');\n                    }\n                },\n                (error : any) =>\n                {\n                    this.sendNotification('Something went wrong!');\n                });\n    }\n\n\n    /**\n     * Handle data submitted from the page's HTML form\n     * Determine whether we are adding a new record or amending an\n     * existing record\n     *\n     * @public\n     * @method saveEntry\n     * @return {None}\n     */\n    saveEntry() : void\n    {\n        let namaDepan          : string = this.form.controls[\"namaDepan\"].value,\n            namaBelakang         : string = this.form.controls[\"namaBelakang\"].value,\n            jenisKelamin          : string = this.form.controls[\"jenisKelamin\"].value,\n            alamat          : string = this.form.controls[\"alamat\"].value,\n            noTelp          : string = this.form.controls[\"noTelp\"].value,\n            email          : string = this.form.controls[\"email\"].value\n\n\n\n        if(this.isEdited)\n        {\n            this.updateEntry(namaDepan, namaBelakang, jenisKelamin, alamat, noTelp, email);\n        }\n        else\n        {\n            //this.createEntry(namaDepan, namaBelakang, jenisKelamin, alamat, noTelp, email);\n            this.InsertData(namaDepan, namaBelakang);\n        }\n    }\n\n\n\n\n    /**\n     * Clear values in the page's HTML form fields\n     *\n     * @public\n     * @method resetFields\n     * @return {None}\n     */\n    resetFields() : void\n    {\n        this.biodataNamaDepan           = \"\";\n        this.biodataNamaBelakang    = \"\";\n    }\n\n\n\n\n    /**\n     * Manage notifying the user of the outcome of remote operations\n     *\n     * @public\n     * @method sendNotification\n     * @param message \t{String} \t\t\tMessage to be displayed in the notification\n     * @return {None}\n     */\n    sendNotification(message : string)  : void\n    {\n        let notification = this.toastCtrl.create({\n            message       : message,\n            duration      : 3000\n        });\n        notification.present();\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/input-biodata/input-biodata.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { InputBiodataPage } from './input-biodata';\n\n@NgModule({\n    declarations: [\n        InputBiodataPage,\n    ],\n    imports: [\n        IonicPageModule.forChild(InputBiodataPage),\n    ],\n})\nexport class InputBiodataPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/input-biodata/input-biodata.module.ts"],"sourceRoot":""}