{"version":3,"sources":["../../src/pages/login-modal/login-modal.ts","../../src/pages/login-modal/login-modal.module.ts"],"names":[],"mappings":"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","file":"20.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, ViewController, ModalController, AlertController, LoadingController, NavParams, ToastController, Platform } from 'ionic-angular'\nimport { ParseService } from '../../providers/parse-service';\nimport { TabsPage } from '../../pages/tabs/tabs';\nimport { Facebook } from '@ionic-native/facebook';\nimport { GooglePlus } from '@ionic-native/google-plus';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GlobalConfigurationService } from '../../providers/global-configuration-service';\n\n/**\n * Generated class for the LoginModalPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n\n@Component({\n  selector: 'page-login-modal',\n  templateUrl: 'login-modal.html',\n  providers: [ParseService, Facebook]\n})\nexport class LoginModalPage {\n\n  model: any = {};\n  loading = false;\n  roomID: number;\n  checkIn: any;\n  mainNav: any = '';\n  skipStatus: boolean = false;\n  bookingData: any = '';\n\n  constructor(public navCtrl: NavController,\n              public loadingCtrl: LoadingController,\n              public navParams: NavParams,\n              public viewCtrl: ViewController,\n              public parseService: ParseService,\n              private toastCtrl: ToastController,\n              private modalCtrl: ModalController,\n              private alertCtrl: AlertController,\n              public plt: Platform,\n              public facebook: Facebook,\n              private googlePlus: GooglePlus,\n              private translate: TranslateService,\n              private globalConfig: GlobalConfigurationService) {\n    parseService.facebookInit();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginModalPage');\n  }\n\n  public pwdEncryptor(email, pwd) {\n    var encrypted;\n    if (pwd == null) {\n      // rand password\n      var password = 'go2ghours';\n      // encrypt password & email\n      encrypted = password;\n    } else if (pwd != null) {\n      // encrypt password & email\n      encrypted = String(pwd);\n    }\n    return encrypted;\n  }\n\n  public pwdDecryptor(pwd) {\n    // decrypt password\n    var decrypted = pwd;\n    return decrypted;\n  }\n\n  private promptPassword(email, existingCheckData, method, platform) {\n    var msgManual; var msgSosmed; var msgChangePassword; var loginLoading; var linkAccount; var forgotPassword; var pwd; var send; var loginSuccess; var loginFail;\n    this.translate.get('MESSAGE_LOGIN_MANUAL').subscribe(value => { msgManual = value; });\n    this.translate.get('MESSAGE_LOGIN_SOSMED').subscribe(value => { msgSosmed = value; });\n    this.translate.get('MESSAGE_LOGIN_CHANGE_PASSWORD').subscribe(value => { msgChangePassword = value; });\n    this.translate.get('LOADING_LOGIN').subscribe(value => { loginLoading = value; });\n    this.translate.get('LINK_ACCOUNT').subscribe(value => { linkAccount = value; });\n    this.translate.get('FORGOT_PASSWORD').subscribe(value => { forgotPassword = value; });\n    this.translate.get('PASSWORD').subscribe(value => { pwd = value; });\n    this.translate.get('SEND').subscribe(value => { send = value; });\n    this.translate.get('LOG_IN_SUCCESS').subscribe(value => { loginSuccess = value; });\n    this.translate.get('LOG_IN_FAIL').subscribe(value => { loginFail = value; });\n    var password;\n\n    let loading = this.loadingCtrl.create({\n      content: loginLoading\n    });\n\n    // sosmed dulu baru manual yang forgot\n    if (method == 'sosmedtomanual') {\n      let alert = this.alertCtrl.create({\n        title: linkAccount,\n        message: msgManual,\n        buttons: [\n          {\n            text: forgotPassword,\n            handler: data => {\n              this.forgotPassword();\n            }\n          }\n        ]\n      });\n      alert.present();\n    }\n    else if (method == 'manualtososmed') {\n      let alert = this.alertCtrl.create({\n        title: linkAccount,\n        message: msgSosmed,\n        inputs: [{\n          name: 'password',\n          placeholder: pwd,\n          type: 'password'\n        }],\n        buttons: [\n          {\n            text: send,\n            handler: data => {\n              loading.present();\n              password = this.pwdEncryptor(email, data.password);\n              this.parseService.login(email, password).then(resLogin => {\n                if (resLogin == 'success') {\n                  this.parseService.existingLinking(email, password, existingCheckData, platform).then(resLink => {\n                    console.log(resLink);\n                    if (resLink == 'Linking success') {\n                      console.log('User login with ' + platform);\n                      loading.dismiss();\n                      this.viewCtrl.dismiss();\n                      this.presentToast(loginSuccess);\n                    }\n                    else if (resLink == 'Linking error') {\n                      loading.dismiss();\n                      this.presentToast(loginFail);\n                    }\n                  });\n                }\n                else if (resLogin == 'error') {\n                  console.log('Password has been changed, please input your new password');\n                  loading.dismiss();\n                  this.presentToast(loginFail);\n                }\n              });\n            }\n          }\n        ]\n      });\n      alert.present();\n    }\n    else if (method == 'manualtososmedchangepwd') {\n      let alert = this.alertCtrl.create({\n        title: linkAccount,\n        message: msgChangePassword,\n        inputs: [{\n          name: 'password',\n          placeholder: pwd,\n          type: 'password'\n        }],\n        buttons: [\n          {\n            text: send,\n            handler: data => {\n              loading.present();\n              password = this.pwdEncryptor(email, data.password);\n              this.parseService.login(email, password).then(resLogin => {\n                if (resLogin == 'success') {\n                  this.parseService.existingLinking(email, password, existingCheckData, platform).then(resLink => {\n                    console.log(resLink);\n                    if (resLink == 'Linking success') {\n                      console.log('User login with ' + platform);\n                      loading.dismiss();\n                      this.navCtrl.popToRoot();\n                      this.navCtrl.setRoot(TabsPage);\n                      this.presentToast(loginSuccess);\n                    }\n                    else if (resLink == 'Linking error') {\n                      loading.dismiss();\n                      this.presentToast(loginFail);\n                    }\n                  });\n                }\n                else if (resLogin == 'error') {\n                  console.log('Password has been changed, please input your new password');\n                  loading.dismiss();\n                  this.presentToast(loginFail);\n                }\n              });\n            }\n          }\n        ]\n      });\n      alert.present();\n    }\n  }\n\n  login(method) {\n    switch (method) {\n      case \"email\":\n        {\n          this.manualLogin();\n          break;\n        }\n      case \"facebook\":\n        {\n          this.facebookLogin();\n          break;\n        }\n      case \"google\":\n        {\n          this.googleLogin();\n          break;\n        }\n    }\n  }\n\n  private manualLogin() {\n    var loginLoading; var invalid; var loginSuccess; var loginFail;\n    this.translate.get('LOADING_LOG_IN').subscribe(value => { loginLoading = value; });\n    this.translate.get('INVALID_USERNAME_PASSWORD').subscribe(value => { invalid = value; });\n    this.translate.get('LOG_IN_SUCCESS').subscribe(value => { loginSuccess = value; });\n    this.translate.get('LOG_IN_FAIL').subscribe(value => { loginFail = value; });\n\n    let loading = this.loadingCtrl.create({\n      content: loginLoading\n    });\n\n    if (this.model.username == '' || this.model.username == null || this.model.password == '' || this.model.password == null) {\n      this.presentToast(invalid);\n    }\n    else {\n      loading.present();\n\n      let username = this.model.username.toLowerCase();\n      let password = this.pwdEncryptor(username, this.model.password);\n\n      // Step for manual login:\n      // 1. Login first\n      // 2. If success, then user logged in\n      // 3. if error, check to database if there's an existing account with different password\n      this.parseService.login(username, password).then(res => {\n        if (res == 'success') {\n          this.parseService.existingCheck(username).then(data => {\n            if (data == null) {\n              console.log('User not exist');\n              loading.dismiss();\n              this.viewCtrl.dismiss();\n              this.presentToast(loginSuccess);\n            }\n            else {\n              console.log('User exist');\n              this.parseService.existingLinking(username, password, data, 'manual').then(resLink => {\n                console.log(resLink);\n                if (resLink == 'Linking success') {\n                  console.log('User login with Google');\n                  loading.dismiss();\n                  this.viewCtrl.dismiss();\n                  this.presentToast(loginSuccess);\n                }\n                else if (resLink == 'Linking error') {\n                  loading.dismiss();\n                  this.presentToast(loginFail);\n                }\n              });\n            }\n          });\n        }\n        else if (res == 'error') {\n          loading.dismiss();\n          console.log('Wrong username or password');\n          this.presentToast(loginFail);\n        }\n      }, err => {\n        console.log(err);\n        loading.dismiss();\n        this.presentToast(err.message);\n      });\n    }\n  }\n\n  private googleLogin() {\n    var loginLoading; var invalid; var loginSuccess; var loginFail;\n    this.translate.get('LOADING_LOG_IN').subscribe(value => { loginLoading = value; });\n    this.translate.get('INVALID_USERNAME_PASSWORD').subscribe(value => { invalid = value; });\n    this.translate.get('LOG_IN_SUCCESS').subscribe(value => { loginSuccess = value; });\n    this.translate.get('LOG_IN_FAIL').subscribe(value => { loginFail = value; });\n\n    let loading = this.loadingCtrl.create({\n      content: loginLoading\n    });\n\n    this.googlePlus.login({'webClientId': this.globalConfig.googleWebClientId, 'offline': true}).then(resGooglePlugin => {\n      loading.present();\n\n      // Step for google login:\n      // 1. Check existing first\n      // 2. If null, then user signed up\n      // 3. If exist, check to database if there's an existing account with different password\n      this.parseService.existingCheck(resGooglePlugin.email).then(data => {\n        if (data == null) {\n          console.log('User not exist');\n          var password = this.pwdEncryptor(resGooglePlugin.email, null);\n          this.parseService.signup(resGooglePlugin, password, 'google').then(success => {\n            console.log(success);\n            loading.dismiss();\n            this.presentToast(loginSuccess);\n            this.viewCtrl.dismiss();\n          }, err => {\n            console.log(err);\n            loading.dismiss();\n            this.presentToast(loginFail);\n          });\n        }\n        else {\n          console.log('User exist');\n          if (data.googleAuth == undefined && data.fbAuth == undefined) {\n            console.log('User exist with Manual account');\n            loading.dismiss();\n            this.promptPassword(resGooglePlugin.email, data, 'manualtososmed', 'google');\n          }\n          else if (data.googleAuth != undefined) {\n            console.log('User exist with Google account');\n            this.parseService.login(resGooglePlugin.email, data.googleAuth).then(res => {\n              loading.dismiss();\n              if (res == 'success') {\n                console.log('User login with Google');\n                this.viewCtrl.dismiss();\n                this.presentToast(loginSuccess);\n              }\n              else if (res == 'error') {\n                console.log('Password has been changed, please input your new password');\n                this.promptPassword(resGooglePlugin.email, data, 'manualtososmedchangepwd', 'google');\n              }\n            }, err => {\n              console.log(err);\n              loading.dismiss();\n              this.presentToast(loginFail);\n            });\n          }\n          else if (data.fbAuth != undefined) {\n            console.log('User exist with Facebook account');\n            this.parseService.login(resGooglePlugin.email, data.fbAuth).then(resLogin => {\n              loading.dismiss();\n              if (resLogin == 'success') {\n                this.parseService.existingLinking(resGooglePlugin.email, data.fbAuth, data, 'google').then(resLink => {\n                  console.log(resLink);\n                  if (resLink == 'Linking success') {\n                    console.log('User login with Google');\n                    loading.dismiss();\n                    this.viewCtrl.dismiss();\n                    this.presentToast(loginSuccess);\n                  }\n                  else if (resLink == 'Linking error') {\n                    loading.dismiss();\n                    this.presentToast(loginFail);\n                  }\n                });\n              }\n              else if (resLogin == 'error') {\n                console.log('Password has been changed, please input your new password');\n                this.promptPassword(resGooglePlugin.email, data, 'manualtososmedchangepwd', 'google');\n              }\n            });\n          }\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n      loading.dismiss();\n      this.presentToast(loginFail);\n    });\n  }\n\n  private facebookLogin() {\n    var loginLoading; var invalid; var loginSuccess; var loginFail;\n    this.translate.get('LOADING_LOG_IN').subscribe(value => { loginLoading = value; });\n    this.translate.get('INVALID_USERNAME_PASSWORD').subscribe(value => { invalid = value; });\n    this.translate.get('LOG_IN_SUCCESS').subscribe(value => { loginSuccess = value; });\n    this.translate.get('LOG_IN_FAIL').subscribe(value => { loginFail = value; });\n\n    let loading = this.loadingCtrl.create({\n      content: loginLoading\n    });\n\n    this.facebook.login(['public_profile', 'email']).then(resFbPlugin => {\n      this.facebook.api('/me?fields=id,email,name,first_name,last_name,gender,birthday', ['public_profile', 'email', 'user_birthday']).then(profile => {\n        loading.present();\n\n        // Step for facebook login:\n        // 1. Check existing first\n        // 2. If null, then user signed up\n        // 3. If exist, check to database if there's an existing account with different password\n        this.parseService.existingCheck(profile.email).then(data => {\n          if (data == null) {\n            console.log('User not exist');\n            var password = this.pwdEncryptor(profile.email, null);\n            this.parseService.signup(profile, password, 'facebook').then(success => {\n              console.log(success);\n              loading.dismiss();\n              this.presentToast(loginSuccess);\n              this.viewCtrl.dismiss();\n            }, err => {\n              console.log(err);\n              loading.dismiss();\n              this.presentToast(loginFail);\n            });\n          }\n          else {\n            console.log('User exist');\n            if (data.fbAuth == undefined && data.googleAuth == undefined) {\n              console.log('User exist with Manual account');\n              loading.dismiss();\n              this.promptPassword(profile.email, data, 'manualtososmed', 'facebook');\n            }\n            else if (data.fbAuth != undefined) {\n              console.log('User exist with Faceboook account');\n              this.parseService.login(profile.email, data.fbAuth).then(res => {\n                loading.dismiss();\n                if (res == 'success') {\n                  console.log('User login with Facebook');\n                  this.viewCtrl.dismiss();\n                  this.presentToast(loginSuccess);\n                }\n                else if (res == 'error') {\n                  console.log('Password has been changed, please input your new password');\n                  this.promptPassword(profile.email, data, 'manualtososmedchangepwd', 'facebook');\n                }\n              }, err => {\n                console.log(err);\n                loading.dismiss();\n                this.presentToast(loginFail);\n              });\n            }\n            else if (data.googleAuth != undefined) {\n              console.log('User exist with Google account');\n              this.parseService.login(profile.email, data.googleAuth).then(resLogin => {\n                if (resLogin == 'success') {\n                  this.parseService.existingLinking(profile.email, data.googleAuth, data, 'facebook').then(resLink => {\n                    console.log(resLink);\n                    if (resLink == 'Linking success') {\n                      console.log('User login with Facebook');\n                      loading.dismiss();\n                      this.presentToast(loginSuccess);\n                      this.viewCtrl.dismiss();\n                    }\n                    else if (resLink == 'Linking error') {\n                      loading.dismiss();\n                      this.presentToast(loginFail);\n                    }\n                  });\n                }\n                else if (resLogin == 'error') {\n                  console.log('Password has been changed, please input your new password');\n                  this.promptPassword(profile.email, data, 'manualtososmedchangepwd', 'facebook');\n                }\n              });\n            }\n          }\n        });\n      });\n    }, err => {\n      console.log(err);\n      loading.dismiss();\n      this.presentToast(loginFail);\n    });\n  }\n\n  forgotPassword() {\n    let modal = this.modalCtrl.create('ForgotPasswordPage');\n    modal.present();\n  }\n\n  presentToast(text) {\n    let toast = this.toastCtrl.create({\n      message: text,\n      duration: 1000,\n      position: 'bottom'\n    });\n\n    toast.present();\n  }\n\n  dismissModal() {\n    this.viewCtrl.dismiss();\n  }\n\n  // facebookLogin() {\n\n  //   let loading = this.loadingCtrl.create({\n  //     content: 'Logging In, Please Wait..'\n  //   });\n  //   loading.present();\n\n  //   this.facebook.login(['public_profile', 'user_friends', 'email']).then(success => {\n  //     console.log(success);\n  //     let expDate = new Date(new Date().getTime() + success.authResponse.expiresIn * 1000).toISOString;\n\n  //     let facebookAuthData = {\n  //       id: success.authResponse.userID,\n  //       access_token: success.authResponse.accessToken,\n  //       expiration_date: expDate\n  //     };\n\n  //     console.log(facebookAuthData);\n  //     let loading = this.loadingCtrl.create({\n  //       content: 'Logging In, Please Wait..'\n  //     });\n  //     loading.present();\n  //     this.parseService.facebookLogin(facebookAuthData)\n  //       .then(success => {\n  //         console.log(success);\n  //         loading.dismiss();\n  //         this.presentToast(\"Logged in successfully!\");\n  //         this.viewCtrl.dismiss()\n  //       }, err => {\n  //         console.log(err);\n  //         loading.dismiss();\n  //         this.presentToast(\"Login with facebook failed, please try again\")\n  //       })\n  //   }, err => {\n  //     console.log(err);\n  //     this.presentToast(\"Login failed\")\n  //   })\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login-modal/login-modal.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginModalPage } from './login-modal';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    LoginModalPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginModalPage),\n    TranslateModule.forChild()\n  ]\n})\nexport class LoginModalPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login-modal/login-modal.module.ts"],"sourceRoot":""}